# =============================================================================
# Pat Fortress - Prometheus Configuration
# Production Monitoring with Service Discovery
# =============================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s
  external_labels:
    cluster: 'pat-fortress'
    environment: 'production'
    region: 'us-east-1'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      scheme: http
      timeout: 10s
      api_version: v2

# Load alerting rules
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:

  # =================================
  # Infrastructure Monitoring
  # =================================

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    
  # Node Exporter (System metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets:
        - 'node-exporter:9100'
    scrape_interval: 15s
    
  # cAdvisor (Container metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets:
        - 'cadvisor:8080'
    scrape_interval: 15s
    metrics_path: /metrics

  # =================================
  # Database Monitoring
  # =================================

  # PostgreSQL Exporter
  - job_name: 'postgres-primary'
    static_configs:
      - targets:
        - 'postgres-exporter-primary:9187'
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'postgres-primary'

  - job_name: 'postgres-replica'
    static_configs:
      - targets:
        - 'postgres-exporter-replica:9187'
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'postgres-replica'

  # Redis Exporter
  - job_name: 'redis-master'
    static_configs:
      - targets:
        - 'redis-exporter:9121'
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'redis-master'

  # =================================
  # Application Services
  # =================================

  # Fortress Core Application
  - job_name: 'fortress-core'
    static_configs:
      - targets:
        - 'fortress-core:8080'
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true

  # Fortress SMTP Server
  - job_name: 'fortress-smtp'
    static_configs:
      - targets:
        - 'fortress-smtp:8080'
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Fortress GraphQL API
  - job_name: 'fortress-api'
    static_configs:
      - targets:
        - 'fortress-api:8080'
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Fortress Plugin Runtime
  - job_name: 'fortress-plugins'
    static_configs:
      - targets:
        - 'fortress-plugins:8080'
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Fortress Workflow Engine
  - job_name: 'fortress-workflows'
    static_configs:
      - targets:
        - 'fortress-workflows:8080'
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Frontend Health Monitoring
  - job_name: 'fortress-frontend'
    static_configs:
      - targets:
        - 'fortress-frontend:3000'
    scrape_interval: 30s
    metrics_path: /api/metrics
    scrape_timeout: 10s

  # =================================
  # Proxy and Load Balancing
  # =================================

  # Nginx Reverse Proxy
  - job_name: 'nginx'
    static_configs:
      - targets:
        - 'nginx-prometheus-exporter:9113'
    scrape_interval: 15s

  # =================================
  # Message Queue Monitoring
  # =================================

  # Kafka Exporter
  - job_name: 'kafka'
    static_configs:
      - targets:
        - 'kafka-exporter:9308'
    scrape_interval: 30s

  # =================================
  # Kubernetes Service Discovery (when running on K8s)
  # =================================

  # Kubernetes API Server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
            - fortress
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes Pods (with prometheus.io annotations)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - fortress
    relabel_configs:
      # Only scrape pods with prometheus.io/scrape annotation
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Use custom metrics path if specified
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Use custom port if specified
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Add pod metadata as labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Kubernetes Services (with prometheus.io annotations)
  - job_name: 'kubernetes-services'
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - fortress
    relabel_configs:
      # Only scrape services with prometheus.io/scrape annotation
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Use custom metrics path if specified
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Use custom port if specified
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Add service metadata as labels
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_service_name

# =================================
# Remote Write Configuration (for long-term storage)
# =================================

remote_write:
  - url: "http://cortex:9009/api/prom/push"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    write_relabel_configs:
      # Drop high cardinality metrics
      - source_labels: [__name__]
        regex: 'go_memstats_.*|prometheus_tsdb_.*'
        action: drop

# =================================
# Storage Configuration
# =================================

storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true