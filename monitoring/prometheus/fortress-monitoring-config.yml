# Prometheus monitoring configuration for Pat Fortress
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'fortress-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load recording and alerting rules
rule_files:
  - "fortress-alerts.yml"
  - "fortress-recording-rules.yml"

# Scrape configurations for Pat Fortress services
scrape_configs:
  # ================================
  # Core Fortress Services
  # ================================
  
  # Main Fortress application
  - job_name: 'fortress-core'
    static_configs:
      - targets: ['fortress-core:8080']
    metrics_path: '/metrics'
    scrape_interval: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: fortress-core:8080
    metric_relabel_configs:
      # Add service label
      - target_label: service
        replacement: 'fortress-core'
      # Add version label from build info
      - source_labels: [__name__]
        regex: 'prometheus_build_info'
        target_label: version
        replacement: '${1}'
  
  # SMTP Server monitoring
  - job_name: 'fortress-smtp'
    static_configs:
      - targets: ['fortress-smtp:1025']
    metrics_path: '/metrics'
    scrape_interval: 10s
    metric_relabel_configs:
      - target_label: service
        replacement: 'fortress-smtp'
      # Email processing metrics
      - source_labels: [__name__]
        regex: 'fortress_emails_(received|processed|failed)_total'
        target_label: metric_type
        replacement: 'email_counter'
      # Connection metrics
      - source_labels: [__name__]
        regex: 'fortress_smtp_connections_(active|total)'
        target_label: metric_type
        replacement: 'connection_gauge'

  # HTTP API monitoring
  - job_name: 'fortress-api'
    static_configs:
      - targets: ['fortress-api:8025']
    metrics_path: '/metrics'
    scrape_interval: 10s
    metric_relabel_configs:
      - target_label: service
        replacement: 'fortress-api'
      # HTTP request duration buckets
      - source_labels: [__name__]
        regex: 'fortress_http_request_duration_seconds.*'
        target_label: metric_type
        replacement: 'http_duration'
      # HTTP request counters
      - source_labels: [__name__]
        regex: 'fortress_http_requests_total'
        target_label: metric_type
        replacement: 'http_counter'

  # Plugin system monitoring
  - job_name: 'fortress-plugins'
    static_configs:
      - targets: ['fortress-plugins:8030']
    metrics_path: '/metrics'
    scrape_interval: 15s
    metric_relabel_configs:
      - target_label: service
        replacement: 'fortress-plugins'
      # Plugin execution metrics
      - source_labels: [__name__]
        regex: 'fortress_plugin_(executions|failures)_total'
        target_label: metric_type
        replacement: 'plugin_counter'
      # Plugin load metrics
      - source_labels: [__name__]
        regex: 'fortress_plugins_loaded'
        target_label: metric_type
        replacement: 'plugin_gauge'

  # ================================
  # Infrastructure Services
  # ================================
  
  # PostgreSQL database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service
        replacement: 'postgres'
      # Database connection metrics
      - source_labels: [__name__]
        regex: 'pg_stat_database_.*'
        target_label: metric_type
        replacement: 'database_stats'
      # Connection pool metrics
      - source_labels: [__name__]
        regex: 'pg_stat_activity_.*'
        target_label: metric_type
        replacement: 'connection_stats'

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service
        replacement: 'redis'
      # Memory usage metrics
      - source_labels: [__name__]
        regex: 'redis_memory_.*'
        target_label: metric_type
        replacement: 'memory_stats'
      # Command stats
      - source_labels: [__name__]
        regex: 'redis_commands_.*'
        target_label: metric_type
        replacement: 'command_stats'

  # Kafka monitoring (if using Kafka for event processing)
  - job_name: 'kafka'
    static_configs:
      - targets: ['kafka-exporter:9308']
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service
        replacement: 'kafka'
      # Topic metrics
      - source_labels: [__name__]
        regex: 'kafka_topic_.*'
        target_label: metric_type
        replacement: 'topic_stats'

  # ================================
  # System Metrics
  # ================================
  
  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service
        replacement: 'system'
      # CPU metrics
      - source_labels: [__name__]
        regex: 'node_cpu_.*'
        target_label: metric_type
        replacement: 'cpu_stats'
      # Memory metrics
      - source_labels: [__name__]
        regex: 'node_memory_.*'
        target_label: metric_type
        replacement: 'memory_stats'
      # Disk metrics
      - source_labels: [__name__]
        regex: 'node_disk_.*'
        target_label: metric_type
        replacement: 'disk_stats'
      # Network metrics
      - source_labels: [__name__]
        regex: 'node_network_.*'
        target_label: metric_type
        replacement: 'network_stats'

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service
        replacement: 'containers'
      # Container CPU metrics
      - source_labels: [__name__]
        regex: 'container_cpu_.*'
        target_label: metric_type
        replacement: 'container_cpu'
      # Container memory metrics
      - source_labels: [__name__]
        regex: 'container_memory_.*'
        target_label: metric_type
        replacement: 'container_memory'
      # Container network metrics
      - source_labels: [__name__]
        regex: 'container_network_.*'
        target_label: metric_type
        replacement: 'container_network'

  # ================================
  # Application Performance Monitoring
  # ================================
  
  # JMX exporter for JVM-based services (if any)
  - job_name: 'jmx-exporter'
    static_configs:
      - targets: ['jmx-exporter:9404']
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service
        replacement: 'jvm'

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://fortress-api:8025/api/v3/health
        - http://fortress-core:8080/health
        - http://fortress-smtp:1025/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
    metric_relabel_configs:
      - target_label: service
        replacement: 'blackbox'
      - source_labels: [__name__]
        regex: 'probe_.*'
        target_label: metric_type
        replacement: 'probe_stats'

  # ================================
  # Business Metrics
  # ================================
  
  # Custom business metrics endpoint
  - job_name: 'fortress-business-metrics'
    static_configs:
      - targets: ['fortress-core:8080']
    metrics_path: '/business-metrics'
    scrape_interval: 60s
    metric_relabel_configs:
      - target_label: service
        replacement: 'business'
      # Email volume metrics
      - source_labels: [__name__]
        regex: 'fortress_business_emails_.*'
        target_label: metric_type
        replacement: 'email_business'
      # Plugin usage metrics
      - source_labels: [__name__]
        regex: 'fortress_business_plugins_.*'
        target_label: metric_type
        replacement: 'plugin_business'
      # Tenant metrics
      - source_labels: [__name__]
        regex: 'fortress_business_tenants_.*'
        target_label: metric_type
        replacement: 'tenant_business'

  # ================================
  # Security Metrics
  # ================================
  
  # Security monitoring endpoint
  - job_name: 'fortress-security-metrics'
    static_configs:
      - targets: ['fortress-core:8080']
    metrics_path: '/security-metrics'
    scrape_interval: 30s
    metric_relabel_configs:
      - target_label: service
        replacement: 'security'
      # Authentication metrics
      - source_labels: [__name__]
        regex: 'fortress_security_auth_.*'
        target_label: metric_type
        replacement: 'auth_security'
      # Rate limiting metrics
      - source_labels: [__name__]
        regex: 'fortress_security_ratelimit_.*'
        target_label: metric_type
        replacement: 'ratelimit_security'
      # Threat detection metrics
      - source_labels: [__name__]
        regex: 'fortress_security_threats_.*'
        target_label: metric_type
        replacement: 'threat_security'

# Remote write configuration for long-term storage
remote_write:
  - url: "https://prometheus-remote-write.example.com/api/v1/write"
    basic_auth:
      username: "${REMOTE_WRITE_USERNAME}"
      password: "${REMOTE_WRITE_PASSWORD}"
    write_relabel_configs:
      # Only send critical metrics to remote storage
      - source_labels: [__name__]
        regex: 'fortress_(emails|http_requests|errors)_total|fortress_.*_duration_seconds'
        action: keep
    queue_config:
      max_samples_per_send: 1000
      max_shards: 10
      capacity: 10000

# Storage configuration
storage:
  tsdb:
    retention.time: 7d  # Keep 7 days locally
    retention.size: 50GB
    path: /prometheus/data
    min-block-duration: 2h
    max-block-duration: 25h