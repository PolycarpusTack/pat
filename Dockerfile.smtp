# =============================================================================
# Pat Fortress SMTP Server - Multi-stage Production Dockerfile
# =============================================================================

# ================================
# Stage 1: Go Builder
# ================================
FROM golang:1.21-alpine AS builder

# Install security and build dependencies
RUN apk --no-cache add ca-certificates git tzdata build-base && \
    addgroup -g 1001 fortress && \
    adduser -D -s /bin/sh -u 1001 -G fortress fortress

WORKDIR /build

# Copy go modules
COPY go.mod go.sum ./
RUN go mod download && go mod verify

# Copy source code
COPY . .

# Build SMTP server with optimizations
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o fortress-smtp \
    ./cmd/smtp/main.go

# ================================
# Stage 2: TypeScript Builder
# ================================
FROM node:18-alpine AS ts-builder

WORKDIR /build

# Copy TypeScript SMTP worker
COPY edge/smtp-worker/ ./edge/smtp-worker/
WORKDIR /build/edge/smtp-worker

# Install dependencies and build
RUN npm ci --only=production && \
    npm run build

# ================================
# Stage 3: Production Runtime
# ================================
FROM alpine:3.18 AS production

# Install runtime dependencies
RUN apk --no-cache add ca-certificates curl netcat-openbsd tzdata && \
    addgroup -g 1001 fortress && \
    adduser -D -s /bin/sh -u 1001 -G fortress fortress

# Create application directories
RUN mkdir -p /app/logs /app/storage /app/temp /app/config && \
    chown -R 1001:1001 /app

# Copy built Go binary
COPY --from=builder --chown=1001:1001 /build/fortress-smtp /usr/local/bin/fortress-smtp

# Copy built TypeScript worker
COPY --from=ts-builder --chown=1001:1001 /build/edge/smtp-worker/dist /app/smtp-worker

# Copy configuration files
COPY --chown=1001:1001 config/ /app/config/

# Switch to non-root user
USER 1001:1001

WORKDIR /app

# Environment variables
ENV SMTP_PORT=1025 \
    SMTP_HOST=0.0.0.0 \
    SMTP_MAX_CONNECTIONS=100 \
    SMTP_MAX_MESSAGE_SIZE=10485760 \
    SMTP_AUTH_ENABLED=false \
    LOG_LEVEL=info \
    FORTRESS_ENV=production

# Health check - test SMTP port
HEALTHCHECK --interval=30s --timeout=10s --start-period=45s --retries=3 \
    CMD nc -z localhost ${SMTP_PORT} || exit 1

# Expose SMTP port
EXPOSE 1025

# Graceful shutdown
STOPSIGNAL SIGTERM

# Start SMTP server
ENTRYPOINT ["/usr/local/bin/fortress-smtp"]
CMD ["--port", "1025", "--host", "0.0.0.0", "--config", "/app/config/smtp.yaml"]

# ================================
# Development Stage
# ================================
FROM golang:1.21-alpine AS development

RUN apk --no-cache add git ca-certificates tzdata curl netcat-openbsd && \
    addgroup -g 1001 fortress && \
    adduser -D -s /bin/sh -u 1001 -G fortress fortress

WORKDIR /app

# Install development tools
RUN go install github.com/cosmtrek/air@latest

# Copy source
COPY . .
RUN go mod download

USER 1001:1001

# Development health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
    CMD nc -z localhost 1025 || exit 1

EXPOSE 1025

# Development with hot reload
CMD ["air", "-c", ".air.smtp.toml"]