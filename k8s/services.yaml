# =============================================================================
# Pat Fortress - Kubernetes Services
# =============================================================================

---
# PostgreSQL Primary Service
apiVersion: v1
kind: Service
metadata:
  name: fortress-postgres-primary-service
  namespace: fortress
  labels:
    app.kubernetes.io/name: fortress-postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: pat-fortress
    app.kubernetes.io/instance: primary
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: postgres
    protocol: TCP
    name: postgres
  - port: 9187
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fortress-postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: primary

---
# Redis Master Service
apiVersion: v1
kind: Service
metadata:
  name: fortress-redis-master-service
  namespace: fortress
  labels:
    app.kubernetes.io/name: fortress-redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: pat-fortress
    app.kubernetes.io/instance: master
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  - port: 9121
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fortress-redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/instance: master

---
# Kafka Service
apiVersion: v1
kind: Service
metadata:
  name: fortress-kafka-service
  namespace: fortress
  labels:
    app.kubernetes.io/name: fortress-kafka
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: pat-fortress
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9308"
spec:
  type: ClusterIP
  ports:
  - port: 9092
    targetPort: kafka
    protocol: TCP
    name: kafka
  - port: 9093
    targetPort: 9093
    protocol: TCP
    name: controller
  - port: 9308
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fortress-kafka
    app.kubernetes.io/component: messaging

---
# Fortress Core Service
apiVersion: v1
kind: Service
metadata:
  name: fortress-core-service
  namespace: fortress
  labels:
    app.kubernetes.io/name: fortress-core
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: pat-fortress
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8025
    targetPort: http
    protocol: TCP
    name: http
  - port: 8080
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fortress-core
    app.kubernetes.io/component: application

---
# Fortress SMTP Service
apiVersion: v1
kind: Service
metadata:
  name: fortress-smtp-service
  namespace: fortress
  labels:
    app.kubernetes.io/name: fortress-smtp
    app.kubernetes.io/component: smtp
    app.kubernetes.io/part-of: pat-fortress
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 1025
    targetPort: smtp
    protocol: TCP
    name: smtp
  - port: 8080
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fortress-smtp
    app.kubernetes.io/component: smtp

---
# Fortress API Service
apiVersion: v1
kind: Service
metadata:
  name: fortress-api-service
  namespace: fortress
  labels:
    app.kubernetes.io/name: fortress-api
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: pat-fortress
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8025
    targetPort: http
    protocol: TCP
    name: http
  - port: 8080
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fortress-api
    app.kubernetes.io/component: api

---
# Fortress Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: fortress-frontend-service
  namespace: fortress
  labels:
    app.kubernetes.io/name: fortress-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: pat-fortress
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: fortress-frontend
    app.kubernetes.io/component: frontend

---
# Nginx Proxy Service
apiVersion: v1
kind: Service
metadata:
  name: fortress-nginx-service
  namespace: fortress
  labels:
    app.kubernetes.io/name: fortress-nginx
    app.kubernetes.io/component: proxy
    app.kubernetes.io/part-of: pat-fortress
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  - port: 1025
    targetPort: smtp
    protocol: TCP
    name: smtp
  selector:
    app.kubernetes.io/name: fortress-nginx
    app.kubernetes.io/component: proxy
  loadBalancerSourceRanges:
  - 0.0.0.0/0

---
# Headless Service for StatefulSet (if needed)
apiVersion: v1
kind: Service
metadata:
  name: fortress-headless-service
  namespace: fortress
  labels:
    app.kubernetes.io/name: fortress
    app.kubernetes.io/part-of: pat-fortress
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: fortress